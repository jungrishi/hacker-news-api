{"version":3,"sources":["component/Loading.jsx","utils/global.js","component/Header.jsx","component/ListStory.jsx","component/withFetchData.js","component/Comment.js","component/Story.js","component/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["styles","display","position","top","left","transform","a","justifyContent","alignItems","Loading","props","react_default","createElement","style","i","dist_default","name","color","fadeIn","BASEURL","Header","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","className","react_router_dom","to","onClick","handlePage","currentPage","totalPage","Component","withFetchData","App","url","withRouter","Fragment","passState","map","list","key","id","pathname","concat","state","data","title","_Component","Post","type","history","push","setState","stories","ids","isLoaded","error","pendingPromise","inherits","createClass","value","_this2","fetch","then","response","json","slice","fetchStory","prevPros","prevState","match","params","page","storiesId","_this3","actions","Promise","all","res","Header_Header","component_Loading","assign","Comment","kids","undefined","isMount","fetchComment","by","dangerouslySetInnerHTML","__html","text","length","kid","index","Story","getPageHistory","goBack","commentID","location","component_Comment","NotFound","basename","react_router","exact","path","component","ListStory","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6ef82d1.chunk.js","sourcesContent":["import React from 'react'\nimport Spinner from 'react-spinkit';\nimport '../styles/listing.css';\n\nconst styles = {\n    'display': 'block',\n    'position': 'absolute',\n    'top': 50 + '%',\n    'left': 50 + '%',\n    'transform': \"translate(-50%, -50%)\"\n}\n\nconst a = {\n    'display': 'flex',\n    'justifyContent': 'center',\n    'alignItems': 'center', \n}\n\n\nfunction Loading(props) {\n    return (\n        <div style={props.i == 1 ? styles: a}>\n            <Spinner name=\"ball-pulse-sync\" color=\"blue\" fadeIn='half'/>\n            </div>\n    )\n}\n\nexport default Loading;","const BASEURL = 'https://hacker-news.firebaseio.com/v0/';\nconst LIMIT = 15;\n// const BREAKPOINTS = {\n//   desktopLg: 1400,\n//   desktopMd: 1300,\n//   desktopSm: 1200,\n//   tabletLg: 1040,\n//   tabletMd: 991,\n//   tabletSm: 840,\n//   mobileLg: 767,\n//   mobileMd: 540,\n//   mobileSm: 400\n// }\n\nexport {\n    LIMIT,\n    BASEURL\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"header\">\n        <h1>\n          <Link to=\"/\">Hacker News</Link>\n        </h1>\n        <div className=\"pagination\">\n          <i\n            className=\"fa fa-angle-left\"\n            onClick={() => this.props.handlePage(\"Prev\")}\n          />\n          <span>{this.props.currentPage}/</span>\n          <span>{this.props.totalPage}</span>\n          <i\n            className=\"fa fa-angle-right\"\n            onClick={() => this.props.handlePage(\"Next\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport withFetchData from \"./withFetchData\";\n\nfunction ListStory(props) {\n  return (\n    <>\n      {props.passState.map(list => (\n        <li key={list.id}>\n          <Link\n            to={{\n              pathname: `/stories/${list.id}`,\n              state: { data: list }\n            }}>\n            {list.title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n}\n\nexport default withFetchData(withRouter(ListStory), \"topstories.json\");\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\nimport { BASEURL, LIMIT } from '../utils/global';\nimport Header from './Header';\n\nexport default (App, url) => {\n  return class Post extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        stories: [],\n        ids: [],\n        isLoaded: false,\n        currentPage: 0,\n        totalPage: 5,\n        error: null\n      }\n\n      this.pendingPromise = [];\n    }\n\n    componentDidMount() {\n      fetch((BASEURL + url))\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            ids: data\n          })\n          data = data.slice(this.state.currentPage * LIMIT, (this.state.currentPage + 1) * LIMIT);\n          this.fetchStory(data)\n        })\n    }\n\n    componentDidUpdate(prevPros, prevState) {\n      if (this.props.match.params && prevPros.match.params && this.props.match.params.page != prevPros.match.params.page) {\n        let data = this.state.ids.slice(this.state.currentPage * LIMIT, (this.state.currentPage + 1) * LIMIT);\n        this.fetchStory(data)\n      }\n    }\n\n    handlePage = (type) => {\n      if (type == 'Next') {\n        if (this.state.currentPage < this.state.totalPage) {\n          let currentPage = this.state.currentPage + 1;\n          this.props.history.push(`/${currentPage}`);\n          this.setState({\n            currentPage: currentPage\n          })\n        }\n      } else {\n        if (this.state.currentPage > 0) {\n          let currentPage = this.state.currentPage - 1;\n          this.props.history.push(`/${currentPage}`);\n          this.setState({\n            currentPage: currentPage\n          })\n        }\n      }\n    }\n\n    fetchStory(storiesId, i) {\n      this.setState({\n        isLoaded: !this.state.isLoaded\n      })\n      let actions = storiesId.map(id => fetch(BASEURL + `item/${id}.json`)\n        .then(data => data.json()));\n      let result = Promise.all(actions);\n      result.then(res => {\n\n        this.setState({\n          stories: res,\n          isLoaded: true,\n          i: this.state.i\n        })\n\n      })\n    }\n\n    render() {\n      return (<div>\n        <Header handlePage={\n          this.handlePage\n        }\n          currentPage={\n            this.state.currentPage\n          }\n          totalPage={\n            this.state.totalPage\n          }\n        />\n        <ul className=\"listing\" > {\n          this.state.isLoaded === false ?\n            < Loading i='1' />\n            :\n            <App\n              currentPage={this.state.currentPage}\n              passState={\n                this.state.stories\n              } {...this.props} />\n        }\n        </ul>\n      </div>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\nimport { BASEURL } from '../utils/global';\n\nclass Comment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            kids: undefined,\n            isLoaded: false,\n        }\n        this.isMount = true;\n    }\n\n    componentDidMount() {\n        this.isMount = true;\n        this.fetchComment(this.props.id)\n    }\n\n    componentWillUnmount() {\n        this.isMount = false;\n    }\n\n    fetchComment(id) {\n        fetch((BASEURL + `item/${id}.json`))\n            .then(res => res.json())\n            .then(data => {\n                let kids;\n                if (data && this.isMount) {\n                    kids = data.kids || [];\n                    this.setState({\n                        data: data,\n                        kids: kids,\n                        isLoaded: !this.isLoaded,\n                    })\n                }\n            })\n    }\n    render() {\n        return (\n            <div className=\"hello\">\n                {!this.state.isLoaded ? <Loading />\n                    :\n                    <>\n                        <h3>{this.state.data.by}</h3>\n                        <div className=\"text\"\n                            dangerouslySetInnerHTML={{ __html: this.state.data.text }}>\n                        </div>\n                        <div className=\"child\">\n                            {this.isMount && this.state.kids && this.state.kids.length > 0 &&\n                                (this.state.kids.map((kid, index) => (\n                                    <div key={index} className=\"descendant-comment\">\n                                        <Comment id={kid} />\n                                    </div>\n                                )\n                                ))\n                            }\n                        </div>\n\n                    </>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Comment;","import React, { Component } from 'react';\nimport Comment from './Comment';\n\nclass Story extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentID: this.props.location.state.data.kids,\n    }\n  }\n\n  getPageHistory = () => {\n    this.props.history.goBack();\n  }\n\n  render() {\n    return (\n      <div className=\"pageWrapper\" >\n        <div className=\"storyHeader\" onClick={this.getPageHistory}>\n          <i\n            className=\"fa fa-close\"\n            onClick={() => this.getPageHistory}\n          />\n        </div >\n        <h2> {this.props.location.state.data.title} </h2>\n        <ul>\n          <li className=\"comments\" > {\n            this.state.commentID && this.state.commentID.length > 0 && (\n              this.state.commentID.map((kid, index) => (\n                <Comment key={index} id={kid} />\n              )))}\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Story;\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <p>Click Hacker News to continue</p>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport ListStory from './component/ListStory';\nimport Story from './component/Story';\nimport NotFound from './component/NotFound';\n\nimport './styles/listing.css';\nimport './styles/responsive.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <>\n        <Router basename=\"/hacker-news-api\">\n          <Switch >\n            {/* <Header /> */}\n            <Route exact path=\"/:page?\" component={ListStory} />\n            <Route exact path=\"/stories/:storyId\" component={Story} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Router>\n      </>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}