{"version":3,"sources":["component/Loading.jsx","utils/global.js","component/Header.jsx","component/ListStory.jsx","component/withFetchData.js","component/Comment.js","component/Story.js","component/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["styles","display","position","top","left","transform","a","justifyContent","alignItems","Loading","props","react_default","createElement","style","i","dist_default","name","color","fadeIn","BASEURL","Header","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","className","react_router_dom","to","onClick","handlePage","currentPage","totalPage","Component","withFetchData","App","url","Fragment","passState","map","list","key","id","pathname","concat","state","data","title","_Component","Post","type","console","log","setState","stories","ids","isLoaded","inherits","createClass","value","_this2","fetch","then","response","json","slice","fetchStory","prevPros","prevState","storiesId","_this3","actions","Promise","all","res","Header_Header","component_Loading","assign","Comment","kids","undefined","depth","fetchComment","by","dangerouslySetInnerHTML","__html","text","length","kid","index","Story","getPageHistory","history","goBack","commentID","location","component_Comment","NotFound","basename","react_router","exact","path","component","ListStory","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2060716f.chunk.js","sourcesContent":["import React from 'react'\nimport Spinner from 'react-spinkit';\nimport '../styles/listing.css';\n\nconst styles = {\n    'display': 'block',\n    'position': 'absolute',\n    'top': 50 + '%',\n    'left': 50 + '%',\n    'transform': \"translate(-50%, -50%)\"\n}\n\nconst a = {\n    'display': 'flex',\n    'justifyContent': 'center',\n    'alignItems': 'center', \n}\n\n\nfunction Loading(props) {\n    return (\n        <div style={props.i == 1 ? styles: a}>\n            <Spinner name=\"ball-pulse-sync\" color=\"blue\" fadeIn='half'/>\n            </div>\n    )\n}\n\nexport default Loading;","const BASEURL = 'https://hacker-news.firebaseio.com/v0/';\n\n// const BREAKPOINTS = {\n//   desktopLg: 1400,\n//   desktopMd: 1300,\n//   desktopSm: 1200,\n//   tabletLg: 1040,\n//   tabletMd: 991,\n//   tabletSm: 840,\n//   mobileLg: 767,\n//   mobileMd: 540,\n//   mobileSm: 400\n// }\n\nexport {\n        BASEURL\n    }","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"header\">\n        <h1>\n          <Link to=\"/\">Hacker News</Link>\n        </h1>\n        <div className=\"pagination\">\n          <i\n            className=\"fa fa-angle-left\"\n            onClick={() => this.props.handlePage(\"Prev\")}\n          />\n          <span>{this.props.currentPage}/</span>\n          <span>{this.props.totalPage}</span>\n          <i\n            className=\"fa fa-angle-right\"\n            onClick={() => this.props.handlePage(\"Next\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport withFetchData from \"./withFetchData\";\n\nfunction ListStory(props) {\n  return (\n    <>\n      {props.passState.map(list => (\n        <li key={list.id}>\n          <Link\n            to={{\n              pathname: `/stories/${list.id}`,\n              state: { data: list }\n            }}>\n            {list.title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n}\n\nexport default withFetchData(ListStory, \"topstories.json\");\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\nimport { BASEURL } from '../utils/global';\nimport Header from './Header';\n\n\nexport default (App, url) => {\n  return class Post extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        stories: [],\n        ids: [],\n        isLoaded: false,\n        currentPage: 0,\n        totalPage: 5\n      }\n    }\n\n    componentDidMount() {\n      console.log({\n        BASEURL,\n        url\n      })\n      fetch(BASEURL + url)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            ids: data\n          })\n          data = data.slice(this.state.currentPage * 15, (this.state.currentPage + 1) * 15);\n          this.fetchStory(data)\n        })\n    }\n\n    componentDidUpdate(prevPros, prevState) {\n      if (this.state.currentPage != prevState.currentPage) {\n        let data = this.state.ids.slice(this.state.currentPage * 15, (this.state.currentPage + 1) * 15);\n        this.fetchStory(data)\n      }\n    }\n\n\n    handlePage = (type) => {\n      console.log(this.state.currentPage);\n      if (type == 'Next') {\n        if (this.state.currentPage < this.state.totalPage) {\n          this.setState({\n            currentPage: this.state.currentPage + 1\n          })\n        }\n      } else {\n        if (this.state.currentPage > 0) {\n          this.setState({\n            currentPage: this.state.currentPage - 1\n          })\n        }\n      }\n    }\n\n    fetchStory(storiesId, i) {\n      this.setState({\n        isLoaded: !this.state.isLoaded\n      })\n      let actions = storiesId.map(id => fetch(BASEURL + `item/${id}.json`)\n        .then(data => data.json()));\n      let result = Promise.all(actions);\n      result.then(res => {\n        this.setState({\n          stories: res,\n          isLoaded: true,\n          i: this.state.i\n        })\n      })\n    }\n\n    render() {\n      return (<div>\n        <Header handlePage={\n          this.handlePage\n        }\n          currentPage={\n            this.state.currentPage\n          }\n          totalPage={\n            this.state.totalPage\n          }\n        />\n        <ul className=\"listing\" > {\n          this.state.isLoaded === false ?\n            < Loading i='1' />\n            :\n            <App\n              currentPage={this.state.currentPage}\n              passState={\n                this.state.stories\n              } {...this.props} />\n        }\n        </ul>\n      </div>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\nimport { BASEURL } from '../utils/global';\n\n// import Label from './Label'; \n\nclass Comment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            kids: undefined,\n            isLoaded: false,\n            depth: 3\n        }\n        this.i = 0;\n    }\n\n    componentDidMount() {\n        this.fetchComment(this.props.id)\n    }\n\n    fetchComment(id) {\n        fetch(BASEURL + `item/${id}.json`)\n            .then(res => res.json())\n            .then(data => {\n                let kids;\n                if (data) {\n                    kids = data.kids || [];\n                    this.setState({\n                        data: data,\n                        kids: kids,\n                        isLoaded: !this.isLoaded,\n                    })\n                }\n            })\n    }\n    render() {\n        return (\n            <div className=\"hello\">\n                {!this.state.isLoaded ? <Loading />\n                    :\n                    <>\n                        <h3>{this.state.data.by}</h3>\n                        <div className=\"text\"\n                            dangerouslySetInnerHTML={{ __html: this.state.data.text }}>\n                        </div>\n                        <div className=\"child\">\n                            {this.state.kids && this.state.kids.length > 0 &&\n                                (this.state.kids.map((kid, index) => (\n                                    <div key={index} className=\"descendant-comment\">\n                                        <Comment id={kid} />\n                                    </div>\n                                )\n                                ))\n                            }\n                        </div>\n\n                    </>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Comment;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Comment from './Comment';\n\nclass Story extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentID: this.props.location.state.data.kids,\n    }\n  }\n\n  getPageHistory = () => {\n    console.log(this.props);\n    this.props.history.goBack();\n  }\n\n  render() {\n    return (\n      <div className=\"pageWrapper\" >\n        <div className=\"storyHeader\" onClick={this.getPageHistory}>\n          <i\n            className=\"fa fa-close\"\n            onClick={() => this.getPageHistory}\n          />\n        </div >\n        <h2> {this.props.location.state.data.title} </h2>\n        <ul>\n          <li className=\"comments\" > {\n            this.state.commentID && this.state.commentID.length > 0 && (\n              this.state.commentID.map((kid, index) => (\n                <Comment key={index} id={kid} />\n              )))}\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Story;\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <p>Click Hacker News to continue</p>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport ListStory from './component/ListStory';\nimport Story from './component/Story';\nimport NotFound from './component/NotFound';\n\nimport './styles/listing.css';\nimport './styles/responsive.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <>\n        <Router basename=\"/hacker-news-api\">\n          <Switch >\n            {/* <Header /> */}\n            <Route exact path=\"/\" component={ListStory} />\n            <Route exact path=\"/stories/:storyId\" component={Story} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Router>\n      </>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}